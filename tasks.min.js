"use strict";var Task=require("../models/Tasks"),getAllTasks=function(e,t){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Task.find({}));case 3:s=e.sent,t.status(200).json({tasks:s}),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(500).json({msg:e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])},createTask=function(t,s){var a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Task.create(t.body));case 3:a=e.sent,s.status(200).json({task:a}),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),s.status(500).json({msg:e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getTask=function(t,s){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Task.findOne({_id:t.params.id}));case 3:if(e.sent,task){e.next=6;break}return e.abrupt("return",s.status(404).json({msg:"no matching id"}));case 6:s.status(200).json({task:task}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),s.status(500).json({msg:e.t0});case 12:case"end":return e.stop()}},null,null,[[0,9]])},updateTask=function(t,s){var a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Task.findOneAndUpdate({_id:t.params.id},t.body,{new:!0,runValidators:!0}));case 3:(a=e.sent)||s.status(200).json({task:a}),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),s.status(500).json({msg:e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])},deleteTask=function(t,s){var a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Task.findOneAndDelete({_id:t.params.id}));case 3:if(a=e.sent){e.next=6;break}return e.abrupt("return",s.status(404).json({msg:"no matching found"}));case 6:s.status(200).json({task:a}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),s.status(500).json({msg:e.t0});case 12:case"end":return e.stop()}},null,null,[[0,9]])};module.exports={getAllTasks:getAllTasks,createTask:createTask,getTask:getTask,updateTask:updateTask,deleteTask:deleteTask};
//# sourceMappingURL=tasks.min.js.map
